<Window x:Class="RevitDemo.Views.FrmSetFamilyView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:RevitDemo.Views"
      mc:Ignorable="d" WindowStartupLocation="CenterScreen"
      Height="200" Width="400"
      Title="配置">
    <Window.Resources>

        <!--提示Label-->

        <Style TargetType="{x:Type Label}" x:Key="New_Label_TitleStyle">
            <Setter Property="Background" Value="White"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="FontSize" Value="14"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
            <Setter Property="Padding" Value="20,0,0,0"/>
        </Style>

        <!--新版普通按钮样式（换行）-->

        <Style TargetType="Button"  x:Key="New_BtnStyle">
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="#64bffe"/>
            <Setter Property="Foreground" Value="#ffffff"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Width" Value="26"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="true"
                                CornerRadius="5">
                            <TextBlock Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              TextWrapping="Wrap"
                                              FontSize="{TemplateBinding FontSize}"
                                              Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Content}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#0a91ef"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#0a91ef" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" Value="#e1e1e1" />
                    <Setter Property="Foreground" Value="#7e7e7e" />
                </Trigger>
                <Trigger Property="Content" Value="取消">
                    <Setter Property="Background" Value="#bbbbbb" />
                    <Setter Property="Foreground" Value="#ffffff" />
                </Trigger>
                <Trigger Property="Content" Value="关闭">
                    <Setter Property="Background" Value="#bbbbbb" />
                    <Setter Property="Foreground" Value="#ffffff" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                        <Condition Property="Content" Value="取消" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="#cccccc" />
                    <Setter Property="Foreground" Value="#ffffff" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                        <Condition Property="Content" Value="关闭" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="#cccccc" />
                    <Setter Property="Foreground" Value="#ffffff" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="New_Default_DataGrid" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="White"></Setter>

            <!--选择单行-->

            <Setter Property="SelectionMode" Value="Single"/>

            <!--自动生成列-->

            <Setter Property="AutoGenerateColumns" Value="False"></Setter>

            <!--能否添加行-->

            <Setter Property="CanUserAddRows" Value="False"></Setter>

            <!--获取或设置一个值用来判断是否允许用户重新排列表列的位置-->

            <Setter Property="CanUserReorderColumns" Value="False"></Setter>

            <!--获取或设置一个值用来判断是否允许用户按列对表中内容进行排序-->

            <Setter Property="CanUserSortColumns" Value="True"></Setter>

            <!--调整列大小-->

            <Setter Property="CanUserResizeColumns" Value="False"></Setter>

            <!--调整行大小-->

            <Setter Property="CanUserResizeRows" Value="False"></Setter>
            <Setter Property="RowHeaderWidth" Value="0"/>
            <Setter Property="BorderBrush" Value="#e4e4e4"/>
            <Setter Property="IsReadOnly" Value="True"></Setter>

            <!--列的样式-->

            <Setter Property="CellStyle" Value="{DynamicResource DataGridCell_Style}"></Setter>

            <!--行样式-->

            <Setter Property="RowStyle" Value="{DynamicResource DataGridRow_Style}"></Setter>

            <!--表头的样式-->

            <Setter Property="ColumnHeaderStyle" Value="{DynamicResource DataGridColumnHeader_Style}"></Setter>
            <Setter Property="HorizontalGridLinesBrush" Value="#e4e4e4"></Setter>
            <Setter Property="VerticalGridLinesBrush" Value="#e4e4e4"></Setter>
        </Style>

        <!--列头header样式-->

        <Style x:Key="DataGridColumnHeader_Style" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="MinHeight" Value="40" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="5,0,5,0"/>
            <Setter Property="FontWeight" Value="SemiBold"></Setter>
            <Setter Property="FontSize" Value="14" />
            <Setter Property="BorderBrush" Value="#e4e4e4"/>
            <Setter Property="BorderThickness" Value="1,0,0,0"/>
            <Setter Property="Background" Value="#c9e8fc"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="BackgroundBorder" BorderThickness="{TemplateBinding BorderThickness}"
                                Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" />
                            <ContentPresenter x:Name="HeaderContent"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" HorizontalContentAlignment="Left"
                               Style="{DynamicResource DataGridSplitter_Thumb}" />

                            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" HorizontalContentAlignment="Right" Background="Transparent"
                               Style="{DynamicResource DataGridSplitter_Thumb}" Grid.Column="1" />
                        </Grid>
                        <ControlTemplate.Triggers>

                            <!--第一列左边不显示分割线-->

                            <Trigger Property="DisplayIndex" Value="2">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="PART_LeftHeaderGripper" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--两列之间的滑块-->

        <Style x:Key="DataGridSplitter_Thumb" TargetType="{x:Type Thumb}">
            <Setter Property="Width" Value="1" />

            <!--手势-->

            <Setter Property="Cursor" Value="SizeWE" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="White">
                            <Rectangle HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="0.5" Fill="#e4e4e4" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--单元格样式-->

        <Style x:Key="DataGridCell_Style" TargetType="DataGridCell">
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Label Background="Transparent" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" VerticalAlignment="Stretch">
                            <ContentPresenter />
                        </Label>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#e5fffa"/>
                    <Setter Property="Foreground" Value="#2F2F2F"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--行样式  必须先设置单元格样式  不然单元格的样式会覆盖掉行样式-->

        <Style x:Key="DataGridRow_Style" TargetType="DataGridRow">
            <Setter Property="MinHeight" Value="40"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#e5fffa"/>
                    <Setter Property="Foreground" Value="#2F2F2F"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#e5fffa"/>
                    <Setter Property="Foreground" Value="#2F2F2F"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="120"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Label VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="13">创建个数：</Label>
        <TextBox Grid.Column="1" Margin="0 5 20 5" Text="{Binding CurrentEnt.Num}" VerticalContentAlignment="Center" FontSize="13"></TextBox>
        <Label Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="13">放置位置：</Label>
        <ComboBox Name="cmbDirection" Grid.Row="1" Grid.Column="1" Margin="0 5 20 5" FontSize="13" SelectedItem="{Binding CurrentEnt.Direction}" ItemsSource="{Binding Directions}"
                  VerticalContentAlignment="Center"></ComboBox>
        <Label Grid.Row="2" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="13">选择房间：</Label>
        <ComboBox Grid.Row="2" Grid.Column="1" Margin="0 5 20 5" FontSize="13" SelectedItem="{Binding CurrentEnt.RoomName}" ItemsSource="{Binding Rooms}"
                  VerticalContentAlignment="Center"></ComboBox>
        <StackPanel Grid.Row="3" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center">
            <Button Width="60" Style="{StaticResource New_BtnStyle}" Click="Button_Click">确定</Button>
            <Button Width="60" Style="{StaticResource New_BtnStyle}" Click="Button_Click_1" Margin="10 0 0 0">取消</Button>
        </StackPanel>
    </Grid>
</Window>
